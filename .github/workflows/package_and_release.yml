# This workflow packages the code into an ankiaddon and attaches it to a release when a valid tag is created
name: Package and release Anki addon

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  package:
    name: Package source code into .ankiaddon file
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get Release version
        run: echo ::set-output name=RELEASE_VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Package code
        run: echo ${GITHUB_REF} echo ${GITHUB_REF/refs\/tags\//} && echo $RELEASE_VERSION && echo ${RELEASE_VERSION} && echo ruzu_popups-${RELEASE_VERSION}.ankiaddon *
      - name: Upload site content
        uses: actions/upload-artifact@v2
        with:
          name: ruzu_popups-${RELEASE_VERSION}.ankiaddon
          path: ruzu_popups-${RELEASE_VERSION}.ankiaddon
  release:
    name: Create release with packaged addon attached
    runs-on: ubuntu-20.04
    needs: package
    steps:
      - name: Download .ankiaddon file
        uses: actions/download-artifact@v2
        with:
          name: ruzu_popups-${RELEASE_VERSION}.ankiaddon
      - name: Create GitHub release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${RELEASE_VERSION}
          release_name: Release ${RELEASE_VERSION}
      - name: Upload asset to GitHub release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ruzu_popups-${RELEASE_VERSION}.ankiaddon
          asset_name: ruzu_popups-${RELEASE_VERSION}.ankiaddon
          asset_content_type: application/zip
